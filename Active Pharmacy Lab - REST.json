{
  "openapi": "3.0.0",
  "paths": {
    "/user/refreshToken": {
      "get": {
        "operationId": "UsersController_refreshToken",
        "parameters": [
          {
            "name": "accessToken",
            "required": true,
            "in": "query",
            "description": "The current JWT of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generates a new token for the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newToken"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/register": {
      "post": {
        "operationId": "UsersController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register a new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Find user by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/profile/me": {
      "get": {
        "operationId": "UsersController_findMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return current user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-typemissmatch"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/order": {
      "post": {
        "operationId": "UsersController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a new order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order-missingParam"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/orders": {
      "get": {
        "operationId": "UsersController_getOrdersByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/order/{orderId}": {
      "get": {
        "operationId": "UsersController_getOrderByOrderId",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "description": "The ID of the order",
            "example": "2",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns order by order id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      },
      "put": {
        "operationId": "UsersController_updateOrder",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "description": "The ID of the order",
            "example": "4",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update an existing order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/order/{orderId}": {
      "get": {
        "operationId": "UsersController_getOrderBy",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns order by user an order id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/order/history": {
      "get": {
        "operationId": "UsersController_getPastOrdersForUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all user orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{userId}/updateProfilePic": {
      "post": {
        "operationId": "UsersController_updateProfilePic",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "my-attachment": {
                    "type": "array",
                    "items": {
                      "format": "binary",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload a new profile picture",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePicture"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/profilePicture/{fileId}": {
      "get": {
        "operationId": "UsersController_getProfilePicture",
        "parameters": [
          {
            "name": "fileId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the profile picture of the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePicture"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/login": {
      "post": {
        "operationId": "LoginController_authenticate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/items": {
      "get": {
        "operationId": "ItemsController_findAll",
        "summary": "",
        "description": "list of all items",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/item/{itemId}": {
      "get": {
        "operationId": "ItemsController_findOne",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/items/new": {
      "get": {
        "operationId": "ItemsController_errorItem",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all recently created items, (Only returns an error - StackTrace)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/admin/users": {
      "get": {
        "operationId": "RolesAdminController_getAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/pharma/stats": {
      "get": {
        "operationId": "RolesAdminController_adminGetStats",
        "description": "Administrative function, returns the number of users, items and pharmacies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PharmacyStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/user/{userId}": {
      "get": {
        "operationId": "RolesAdminController_getUserByID",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Admin"
        ]
      },
      "put": {
        "operationId": "RolesAdminController_updateUserByID",
        "summary": "",
        "description": "Update user by id",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update an existing user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/pharmacist/item": {
      "post": {
        "operationId": "RolesPharmacistController_createItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a new item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Pharmacist"
        ]
      }
    },
    "/admin/search": {
      "get": {
        "operationId": "RolesAdminController_getUserByIdQueryParam",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/pharmacist/item/{itemId}": {
      "get": {
        "operationId": "ItemsController_findOne",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Pharmacist"
        ]
      },
      "put": {
        "operationId": "RolesPharmacistController_updateItem",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update an existing item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Pharmacist"
        ]
      },
      "delete": {
        "operationId": "RolesPharmacistController_deleteItem",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "description": "The ID of the item",
            "example": "1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes an existing item"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Pharmacist"
        ]
      }
    },
    "/pharmacist/orders": {
      "get": {
        "operationId": "RolesPharmacistController_getAllOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Pharmacist"
        ]
      }
    },
    "/pharmacist/orders/{userId}": {
      "get": {
        "operationId": "RolesPharmacistController_getOrderByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all user oreders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "Pharmacist"
        ]
      }
    }
  },
  "info": {
    "title": "Active Pharmacy Lab",
    "description": "Active Lab API Specification",
    "version": "0.9",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3003/pharmacy/api/v2"
    }
  ],
  "components": {
    "schemas": {
      "MedicalCondition": {
        "type": "object",
        "properties": {
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dietaryRestriction": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "allergies",
          "dietaryRestriction",
          "prescriptions"
        ]
      },
      "MedicalCondition-typemissmatch": {
        "type": "object",
        "properties": {
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dietaryRestriction": {
            "type": "string"
          },
          "prescriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "allergies",
          "dietaryRestriction",
          "prescriptions",
          "notes"
        ]
      },
      "UpdateOrder": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          },
          "promoCode": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "promoCode"
        ]
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "User name"
          },
          "password": {
            "type": "string",
            "description": "User pasword"
          },
          "ssn": {
            "type": "number",
            "example": 856456787,
            "description": "Social Security Number"
          },
          "creditCard": {
            "type": "number",
            "example": 4580987654321455,
            "description": "Credit card"
          },
          "medicalCondition": {
            "$ref": "#/components/schemas/MedicalCondition"
          }
        },
        "required": [
          "userName",
          "password",
          "ssn",
          "creditCard",
          "medicalCondition"
        ]
      },
      "ProfilePicture": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          },
          "originalname": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "base64Content": {
            "type": "string"
          }
        },
        "required": [
          "fileId",
          "userId",
          "originalname",
          "filename",
          "mimetype",
          "path",
          "base64Content"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "userName": {
            "type": "string",
            "description": "User name"
          },
          "password": {
            "type": "string",
            "description": "User pasword"
          },
          "ssn": {
            "type": "number",
            "example": 987654321,
            "description": "Social Security Number"
          },
          "creditCard": {
            "type": "number",
            "example": 4580987654321455,
            "description": "Credit card"
          },
          "medicalCondition": {
            "$ref": "#/components/schemas/MedicalCondition"
          },
          "orderHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemId": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          "role": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "userName",
          "password",
          "ssn",
          "creditCard",
          "medicalCondition",
          "role",
          "region"
        ]
      },
      "PharmacyStats": {
        "type": "object",
        "properties": {
          "users": {
            "type": "number"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orders": {
            "type": "number"
          },
          "items": {
            "type": "number"
          }
        },
        "required": [
          "users",
          "roles",
          "orders",
          "items"
        ]
      },
      "User-typemissmatch": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "description": "User ID"
          },
          "userName": {
            "type": "string",
            "description": "User name"
          },
          "password": {
            "type": "string",
            "description": "User pasword"
          },
          "ssn": {
            "type": "number",
            "example": 987654321,
            "description": "Social Security Number"
          },
          "creditCard": {
            "type": "string",
            "example": 4580987654321455,
            "description": "Credit card"
          },
          "medicalCondition": {
            "$ref": "#/components/schemas/MedicalCondition-typemissmatch"
          },
          "orderHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemId": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          "role": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "userName",
          "password",
          "ssn",
          "creditCard",
          "medicalCondition",
          "orderHistory",
          "role",
          "region"
        ]
      },
      "OrderSummary": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "number",
            "example": 1,
            "description": "Item ID"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity"
          }
        },
        "required": [
          "itemId",
          "quantity"
        ]
      },
      "CreateOrder": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          },
          "promoCode": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "items",
          "promoCode"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          },
          "promoCode": {
            "type": "number",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "couponCode": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "userId",
          "items",
          "promoCode",
          "createdAt"
        ]
      },
      "Order-missingParam": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          },
          "promoCode": {
            "type": "number",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "userId",
          "items",
          "promoCode",
          "createdAt",
          "bundlePackage"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name"
          },
          "password": {
            "type": "string",
            "description": "User password"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "Item": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "number",
            "example": 1,
            "description": "Item id"
          },
          "itemName": {
            "type": "string",
            "description": "Item name"
          },
          "itemPrice": {
            "type": "number",
            "example": 10,
            "description": "Item price"
          },
          "referenceUrl": {
            "type": "string",
            "example": "https://nonamesecurity.com/itemInformation",
            "description": "reference URL for the item"
          }
        },
        "required": [
          "itemId",
          "itemName",
          "itemPrice"
        ]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "User name"
          },
          "password": {
            "type": "string",
            "description": "User password"
          },
          "ssn": {
            "type": "number",
            "example": 987654321,
            "description": "Social Security Number"
          },
          "creditCard": {
            "type": "number",
            "example": 4580987654321455,
            "description": "Credit card"
          },
          "medicalCondition": {
            "$ref": "#/components/schemas/MedicalCondition"
          }
        }
      },
      "CreateItem": {
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string",
            "description": "Item name"
          },
          "itemPrice": {
            "type": "number",
            "description": "Item price"
          },
          "referenceUrl": {
            "type": "string",
            "example": "https://nonamesecurity.com/itemInformation",
            "description": "reference URL for the item"
          }
        },
        "required": [
          "itemName",
          "itemPrice",
          "referenceUrl"
        ]
      },
      "UpdateItem": {
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string",
            "description": "Item name"
          },
          "itemPrice": {
            "type": "number",
            "example": 10,
            "description": "Item price"
          },
          "referenceUrl": {
            "type": "string",
            "example": "https://nonamesecurity.com/itemInformation",
            "description": "reference URL for the item"
          }
        }
      },
      "newToken": {
        "type": "object",
        "properties": {
          "newToken": {
            "type": "string",
            "description": "New JWT Token"
          }
        }
      }
    }
  },
  "x-active-deps": [
    {
      "consumer": {
        "in": "query",
        "method": "GET",
        "parameter": "jwtToken",
        "path": "/user/refreshToken"
      },
      "producer": {
        "in": "body",
        "location": "/accessToken",
        "method": "POST",
        "path": "/login"
      }
    },
    {
      "consumer": {
        "in": "body",
        "method": "POST",
        "parameter": "password",
        "path": "/login"
      },
      "producer": {
        "in": "body",
        "location": "/password",
        "method": "POST",
        "path": "/user/register",
        "fromRequest": true
      }
    },
    {
      "consumer": {
        "in": "path",
        "method": "GET",
        "parameter": "userId",
        "path": "/user/{userId}/order/{orderId}"
      },
      "producer": {
        "in": "body",
        "location": "/userId",
        "method": "POST",
        "path": "/user/order"
      }
    }
  ]
}